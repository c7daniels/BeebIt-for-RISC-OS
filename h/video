/*>video.h
 *
 * BeebIt - BBC Micro Model B Emulator
 *
 * Cycle-level video emulation
 *
 * (C) Copyright Crispian Daniels, 2024-2025
 *
 * Email: <convertedgames@3insdale.me.uk>

 */

#define VIDEODISPLAYSYNCEDGE 0x80
#define VIDEODISPLAYPOSSIBLESTART 0x40
#define VIDEODISPLAYADVANCEMASK 0x30
#define VIDEODISPLAYSKIP 0x08
#define VIDEODISPLAYCURSOR 0x04
#define VIDEODISPLAYTELETEXT 0x02
#define VIDEODISPLAYDISPLAY 0x01

#define VIDEODISPLAYOUTRIGHT 0x10
#define VIDEODISPLAYSTOP 0x20
#define VIDEODISPLAYOUTLEFT 0x30

#define CLIPPEDBELOWSKIPFLAG 0x80
#define CLIPPEDSKIPFLAG 0x40
#define CLIPPEDABOVESKIPFLAG 0x20
#define FRAMETIMESKIPFLAG 0x10
#define VSYNCSKIPFLAG 0x08
#define HSYNCSKIPFLAG 0x04
#define BEFOREDISPLAYSKIPFLAG 0x02
#define FASTSKIPFLAG 0x01

#define VIDEOSTEPEVENTR0HIT 0x80
#define VIDEOSTEPEVENT1AFTERR0HIT 0x40
#define VIDEOSTEPEVENT2AFTERR0HIT 0x20
#define VIDEOSTEPEVENT3AFTERR0HIT 0x10
#define VIDEOSTEPEVENTLPSTB 0x08

#define VIDEOSTEPSIGNALSEGMENT0 0x8000U
#define VIDEOSTEPSIGNALSEGMENT1 0x4000U
#define VIDEOSTEPSIGNALSEGMENT2 0x2000U
#define VIDEOSTEPSIGNALSEGMENT3 0x1000U
#define VIDEOSTEPSIGNALCURSOR 0x400U
#define VIDEOSTEPSIGNALSKEW1CURSOR 0x200U
#define VIDEOSTEPSIGNALSKEW2CURSOR 0x100U
#define VIDEOSTEPSIGNALDISPLAY 0x04U
#define VIDEOSTEPSIGNALSKEW1DISPLAY 0x02U
#define VIDEOSTEPSIGNALSKEW2DISPLAY 0x01U

#define VIDEOSTEPSIGNALSEGMENTSHIFT 12
#define VIDEOSTEPSIGNALABOVESHIFT 16
#define VIDEOSTEPSIGNALBELOWSHIFT 8

#define VIDEOSTEPSIGNALSEGMENTMASK (VIDEOSTEPSIGNALSEGMENT0|VIDEOSTEPSIGNALSEGMENT1|VIDEOSTEPSIGNALSEGMENT2|VIDEOSTEPSIGNALSEGMENT3)
#define VIDEOSTEPSIGNALPSEGMENTMASK ((VIDEOSTEPSIGNALSEGMENTMASK<<VIDEOSTEPSIGNALABOVESHIFT)|(VIDEOSTEPSIGNALSEGMENTMASK<<VIDEOSTEPSIGNALBELOWSHIFT)|VIDEOSTEPSIGNALSEGMENTMASK)

#define VIDEOSTEPSIGNALSTOPMASK ((VIDEOSTEPSIGNALSEGMENT3|VIDEOSTEPSIGNALSKEW2CURSOR)>>1)
#define VIDEOSTEPSIGNALPSTOPMASK ((VIDEOSTEPSIGNALSTOPMASK<<VIDEOSTEPSIGNALABOVESHIFT)|(VIDEOSTEPSIGNALSTOPMASK<<VIDEOSTEPSIGNALBELOWSHIFT)|VIDEOSTEPSIGNALSTOPMASK)

#define VIDEOSTEPROWREGISTERFLAG 0x20
#define VIDEOSTEPHDISPLAYFLAG 0x10
#define VIDEOSTEPVSYNCDELAYFLAG 0x08
#define VIDEOSTEPHSYNCFLAG 0x04
#define VIDEOSTEPFASTFLAG 0x02
#define VIDEOSTEPODDFLAG 0x01

#define VIDEOREADEVENTFLAG 0x10
#define VIDEOREADSIGNALFLAG 0x08
#define VIDEOREADSHADOWFLAG 0x04

#define VIDEOREADSTARTSHIFT 0

typedef HOSTVIDEOREADOP VIDEOREADFOUR[4]; //screen start 0x4000, 0x6000, 0x3000, 0x5800

typedef VIDEOREADFOUR* VIDEOREADSIXTEEN[4]; //MA13-MA12 0x0, 0x1, 0x2, 0x3

typedef VIDEOREADSIXTEEN* VIDEOREADSET[6]; //memory with 2k teletext, memory, shadow
                                           //even sixteens then odd sixteens

extern VIDEOREADSET videoreadset;
extern VIDEOREADSET videoreadpset;

/*palette*/
extern const unsigned int palette_rgb[8];
extern unsigned int palette_specified[8];

extern int videospeed_specified;
extern int framerate_specified;

extern R6502ZONEMAP* videodisplayskip(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritecursorblank(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritegraphics(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritecursorgraphics(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowriteteletext(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritecursorteletext(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowriteecursorblank(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowriteegraphics(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowriteecursorgraphics(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowriteeteletext(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowriteecursorteletext(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritepcursorblank(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritepgraphics(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritepcursorgraphics(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritepteletext(R6502ZONEMAP* zmap, uintptr_t peripheral_code);
extern R6502ZONEMAP* videowritepcursorteletext(R6502ZONEMAP* zmap, uintptr_t peripheral_code);

extern void videoinit(void);
extern void videosetpalette(void);
extern void videosetscale(void);
extern void videohostmodevars(void);
extern int writeusedcolours(void);
extern HOSTMAP* videoloadteletext(HOSTMAP* hmap, uintptr_t queue);
extern HOSTMAP* videoshiftteletext(HOSTMAP* hmap);
extern void videofreeworkspace(void);
extern void videoreset(void);
