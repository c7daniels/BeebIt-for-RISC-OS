;>6502cpus.h
;
; BeebIt - BBC Micro Model B Emulator
;
; (C) Copyright Michael J Foot, 1998-2024
;
; Email: <mjfoot@paradise.net.nz>
;

NFLAG EQU &80
VFLAG EQU &40
UFLAG EQU &20
BFLAG EQU &10
DFLAG EQU &08
IFLAG EQU &04
ZFLAG EQU &02
CFLAG EQU &01
NOTNFLAG EQU &7F
NOTVFLAG EQU &BF
NOTUFLAG EQU &DF
NOTBFLAG EQU &EF
NOTDFLAG EQU &F7
NOTIFLAG EQU &FB
NOTZFLAG EQU &FD
NOTCFLAG EQU &FE

BUS_WRITEFLAG EQU &01
BUS_BASEFLAG EQU &05

NMIS_OLDRESET EQU &40
NMIS_OLDNMI EQU &20
NMIS_NMI EQU &02
NMIS_NOTOLDRESET EQU &BF
NMIS_NOTOLDNMI EQU &DF
NMIS_NOTNMI EQU &FD

R6502_DECODE_SEQUENCE EQU 256
R6502_INTERRUPT_DECODE_SEQUENCE EQU 257
R6502_INTERRUPT_SEQUENCE EQU 258
R6502_RESET_SEQUENCE EQU 259
R6502_READ_STRETCH_SEQUENCE EQU 260
R6502_WRITE_STRETCH_SEQUENCE EQU 261
R6502_OPCODE_07_SEQUENCE EQU 262

  MACRO
  R6502_JUMP_TO_READ_OP
  AND r2,r1,#&F000000F-BUS_WRITEFLAG
  LDR pc,[r0,r2,ROR #24]
  MEND

  MACRO
  R6502_JUMP_TO_WRITE_OP
  AND r2,r1,#&F000000F
  LDR pc,[r0,r2,ROR #24]
  MEND

  MACRO
  R6502_JUMP_TO_ZPG_READ_OP
  LDR r3,[r0,#:INDEX:R6502_PAGEZERO]
  LDRB r2,[r3,r1,LSR #24]
  STRB r2,[r0,#:INDEX:R6502_M]
  IF PlaceKeyboardStateInRegister
  LDR pc, [r8], #4
  ELSE
  LDR r1,[r0,#:INDEX:R6502_KEYBOARD_STATE]
  LDR pc, [r1], #4
  ENDIF
  MEND

  MACRO
  R6502_JUMP_TO_ZPG_WRITE_OP
  LDR r3,[r0,#:INDEX:R6502_PAGEZERO]
  LDRB r2,[r0,#:INDEX:R6502_M]
  STRB r2,[r3,r1,LSR #24]
  IF PlaceKeyboardStateInRegister
  LDR pc, [r8], #4
  ELSE
  LDR r1,[r0,#:INDEX:R6502_KEYBOARD_STATE]
  LDR pc, [r1], #4
  ENDIF
  MEND

  MACRO
  R6502_JUMP_TO_STACK_READ_OP
  LDR r3,[r0,#:INDEX:R6502_PAGEONE]
  LDRB r2,[r3,r1,LSR #24]
  STRB r2,[r0,#:INDEX:R6502_M]
  IF PlaceKeyboardStateInRegister
  LDR pc, [r8], #4
  ELSE
  LDR r1,[r0,#:INDEX:R6502_KEYBOARD_STATE]
  LDR pc, [r1], #4
  ENDIF
  MEND

  MACRO
  R6502_JUMP_TO_STACK_WRITE_OP
  LDR r3,[r0,#:INDEX:R6502_PAGEONE]
  LDRB r2,[r0,#:INDEX:R6502_M]
  STRB r2,[r3,r1,LSR #24]
  IF PlaceKeyboardStateInRegister
  LDR pc, [r8], #4
  ELSE
  LDR r1,[r0,#:INDEX:R6502_KEYBOARD_STATE]
  LDR pc, [r1], #4
  ENDIF
  MEND

  MACRO
  R6502_JUMP_WITHOUT_BUS_OP
  IF PlaceKeyboardStateInRegister
  LDR pc, [r8], #4
  ELSE
  LDR r1,[r0,#:INDEX:R6502_KEYBOARD_STATE]
  LDR pc, [r1], #4
  ENDIF
  MEND

  MACRO
  R6502_JUMP_FROM_BUS_OP
  IF PlaceKeyboardStateInRegister
  LDR pc, [r8], #4
  ELSE
  LDR r1,[r0,#:INDEX:R6502_KEYBOARD_STATE]
  LDR pc, [r1], #4
  ENDIF
  MEND

  MACRO
  R6502_IMPLIED_NEXT_INSTRUCTION
  LDR r1,[r0,#:INDEX:R6502_SYNC_PC_CODE]
  ADD r1,r1,#1:SHL:16
  LDR pc,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  MEND

  MACRO
  R6502_IMMEDIATE_NEXT_INSTRUCTION
  LDR r1,[r0,#:INDEX:R6502_SYNC_PC_CODE]
  ADD r1,r1,#2:SHL:16
  LDR pc,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  MEND

  MACRO
  R6502_ADDRESSED_NEXT_INSTRUCTION
  LDR r1,[r0,#:INDEX:R6502_LAST_PC_CODE]
  ADD r1,r1,#1:SHL:16
  LDR pc,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  MEND

  END
