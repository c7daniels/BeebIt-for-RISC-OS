/*>videoscale.h
 *
 * BeebIt - BBC Micro Model B Emulator
 *
 * Enhanced host screen mode compatibility
 *
 * (C) Copyright Crispian Daniels, 2024
 *
 * Email: <convertedgames@3insdale.me.uk>
 */

/*#define VIDEOSCALE_WITH_OVERSCALE*/

typedef struct {
  int leftpixel : 16;
  int rightpixel : 16;
} VIDEOSCALELUTPARAMETERS;

typedef struct {
  HOSTVIDEOOP graphics;
  HOSTVIDEOOP teletext;
  HOSTVIDEOOP teletextb;
  HOSTVIDEOOP cursor;
} VIDEOWRITEINNEROPS;

typedef struct {
  R6502PERIPHERALOP graphics;
  R6502PERIPHERALOP teletext;
  R6502PERIPHERALOP teletextb;
  R6502PERIPHERALOP cursorblank;
  R6502PERIPHERALOP cursorgraphics;
  R6502PERIPHERALOP cursorteletext;
  R6502PERIPHERALOP cursorteletextb;
} VIDEOWRITEOPS;

typedef struct {
  R6502PERIPHERALOP blank;
  R6502PERIPHERALOP graphics;
  R6502PERIPHERALOP teletext;
  R6502PERIPHERALOP teletextb;
  R6502PERIPHERALOP cursorblank;
  R6502PERIPHERALOP cursorgraphics;
  R6502PERIPHERALOP cursorteletext;
  R6502PERIPHERALOP cursorteletextb;
} VIDEOBLACKLEVELOPS;

typedef struct {
  HOSTVIDEOOP line;
  HOSTVIDEOOP* even;
  HOSTVIDEOOP* odd;
  HOSTVIDEOOP* loop;
} VIDEOSCALEOPS;

typedef struct VIDEOSCALEUPDATEPARAMS
{
  int videospeed;
  int framerate;
} VIDEOSCALEUPDATEPARAMS;

typedef struct {
  int lutsize;
  int format;    /* bit-field:
              bit 3: even and odd fields are distinguished
              bit 2:
                  0: 4-bit colour fragments
                  1: 8-bit colour fragments
           bits 1,0:
                  0: 8-dot columns
                  1: 12-dot columns
               2, 3: 24-dot columns
    */
  int teletextslices;
  int buffershift;
  int columnpixels;
  int linescale;
  void (*init)(VIDEOSCALELUTPARAMETERS *lutparams);
  VIDEOSCALELUTPARAMETERS lutparameters;
  VIDEOWRITEINNEROPS writeinnerops;
  VIDEOWRITEOPS writeops;
  VIDEOBLACKLEVELOPS blacklevelops;
  VIDEOSCALEOPS ops;
} VIDEOSCALECHOICE;

extern char **displayzoomicons;

extern VIDEOSCALEUPDATEPARAMS videoscale_updateparameters;
extern VIDEOSCALELUTPARAMETERS videoscale_lutparameters;
extern void (*videoscale_init)(VIDEOSCALELUTPARAMETERS *lutparams);

extern int getoverscalezoomavailabilityformode(intptr_t mode);
extern int get256linezoomavailabilityformode(intptr_t mode, int minlinescale);
extern void videoscalechoose(intptr_t mode, const VIDEOSCALEUPDATEPARAMS *uparams, VIDEOSCALECHOICE *choice);
extern void videoscalesetops(VIDEOSCALECHOICE *choice);
