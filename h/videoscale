/*>videoscale.h
 *
 * BeebIt - BBC Micro Model B Emulator
 *
 * Enhanced host screen mode compatibility
 *
 * (C) Copyright Crispian Daniels, 2024
 *
 * Email: <convertedgames@3insdale.me.uk>
 */

/*#define VIDEOSCALE_WITH_OVERSCALE*/

typedef struct {
  int offset;
  int leftpixel : 16;
  int rightpixel : 16;
} VIDEOSCALELUTPARAMETERS;

typedef struct {
  int graphics : 8;
  int unroundedteletext : 8;
  int roundedteletext : 8;
} VERTICALVIDEOSCALES;

typedef struct {
  int mode;
  int alignmentmask;
  int linelengthfloor;
  int scaledlinelengthfloor;
  int lutsize;
  int teletextform; /*line ratio, pixel depth and graphics separation*/
    /* bit-field:
        bits 2-3: number of scanlines per dot-row
           bit 1: 8-bpp if set, 4-bpp if clear
           bit 0: 8-column graphics separation if set,
                  6-column graphics separation if clear
    */
  int screenoffsetlines;
  int screenoffsetremainder;
  VIDEOSCALELUTPARAMETERS graphicslutparameters;
  VIDEOSCALELUTPARAMETERS teletextlutparameters;
  VERTICALVIDEOSCALES verticalscales;
  void (*initgraphics)(VIDEOSCALELUTPARAMETERS *lutparams);
  void (*initteletext)(VIDEOSCALELUTPARAMETERS *lutparams);
  void (*scalegraphics)(intptr_t bufferaddress, intptr_t hostaddress);
  void (*scaleteletext)(intptr_t bufferaddress, intptr_t hostaddress);
} VIDEOSCALECHOICE;

extern char **displayzoomicons;

#ifdef VIDEOSCALE_WITH_OVERSCALE
extern void limitedblankrow(intptr_t hostaddress, int length, int mask);
#endif
extern int getoverscalezoomavailabilityformode(intptr_t mode);
extern int get256linezoomavailabilityformode(intptr_t mode);
extern int getzoomnumberformode(intptr_t mode);
extern void videoscalechoose(intptr_t mode, VIDEOSCALECHOICE *choice);
