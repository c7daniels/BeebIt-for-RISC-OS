;>65c12cpu!!.s
;
; BeebIt - BBC Micro Model B Emulator
;
; Cycle-level CPU emulation
;
; (C) Copyright Crispian Daniels, 2024-2025
;
; Email: <convertedgames@3insdale.me.uk>
;

  GET h.6502zmaps

  GET h.6502cmaps

  GET h.6502cpus

; Use the GET directive to include register definitions as if typed here

  GET h.RegNames

; Area name C$$code advisable as wanted to link with C output

  AREA |C$$code|, CODE, READONLY

; Import global symbols

; Export global symbols

  EXPORT |r65c12nopdecodestep|
  EXPORT |r65c12breadcrumbpushedtoresetlostep|
  EXPORT |r65c12breadcrumbpushedtointerruptlostep|
  EXPORT |r65c12breadcrumbpushedtobrklostep|

|r65c12nopdecodestep|
  LDR r1,[r0,#:INDEX:R6502_SYNC_PC_CODE]
  ADD r1,r1,#1:SHL:16
  STR r1,[r0,#:INDEX:R6502_SYNC_PC_CODE]
  LDRB r2,[r0,#:INDEX:R6502_M]
  ADD r3,r0,#:INDEX:R6502_SEQUENCES
  LDR r3,[r3,r2,LSL #2]
  STR r3,[r0,#:INDEX:R6502_CPU_STATE]
  ADD r1,r1,#1:SHL:16
  R6502_JUMP_TO_READ_OP

|r65c12breadcrumbpushedtoresetlostep|
  STR r1,[r0,#:INDEX:R6502_CPU_STATE]
  LDR r2,[r0,#:INDEX:R6502_SP_CODE]
  SUB r2,r2,#1:SHL:24
  STR r2,[r0,#:INDEX:R6502_SP_CODE]
  LDRB r2,[r0,#:INDEX:R6502_PS]
  BIC r2,r2,#DFLAG
  ORR r2,r2,#IFLAG
  STRB r2,[r0,#:INDEX:R6502_PS]
  LDR r2,[r0,#:INDEX:R6502_TRANSITION2ACTION]
  MOV r1,#BUS_BASEFLAG
  SUB r1,r1,#4:SHL:16
  STR r1,[r0,#:INDEX:R6502_ADDRESS_CODE]
  STR r2,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  LDR r2,[r0,#:INDEX:R6502_LBREAK]
  TST r2,r2
  LDRNE r3,[r0,#:INDEX:R6502_RESETACTION]
  STRNE r3,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  R6502_JUMP_TO_READ_OP

|r65c12breadcrumbpushedtointerruptlostep|
  STR r1,[r0,#:INDEX:R6502_CPU_STATE]
  LDR r2,[r0,#:INDEX:R6502_SP_CODE]
  SUB r2,r2,#1:SHL:24
  STR r2,[r0,#:INDEX:R6502_SP_CODE]
  LDRB r2,[r0,#:INDEX:R6502_PS]
  LDRB r3,[r0,#:INDEX:R6502_NMIS]
  BIC r2,r2,#DFLAG
  ORR r2,r2,#IFLAG
  STRB r2,[r0,#:INDEX:R6502_PS]
  BIC r1,r3,r3,LSR #4
  TST r1,#NMIS_NMI
  MOV r1,#BUS_BASEFLAG
  ORRNE r3,r3,#NMIS_OLDNMI
  SUBNE r1,r1,#6:SHL:16
  SUBEQ r1,r1,#2:SHL:16
  STR r1,[r0,#:INDEX:R6502_ADDRESS_CODE]
  LDR r2,[r0,#:INDEX:R6502_TRANSITION2ACTION]
  STRNEB r3,[r0,#:INDEX:R6502_NMIS]
  STR r2,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  LDR r2,[r0,#:INDEX:R6502_LBREAK]
  TST r2,r2
  LDRNE r3,[r0,#:INDEX:R6502_RESETACTION]
  STRNE r3,[r0,#:INDEX:R6502_TRANSITION1ACTION]
  R6502_JUMP_TO_READ_OP

|r65c12breadcrumbpushedtobrklostep|
  STR r1,[r0,#:INDEX:R6502_CPU_STATE]
  LDR r2,[r0,#:INDEX:R6502_SP_CODE]
  SUB r2,r2,#1:SHL:24
  STR r2,[r0,#:INDEX:R6502_SP_CODE]
  LDRB r2,[r0,#:INDEX:R6502_PS]
  BIC r2,r2,#DFLAG
  ORR r2,r2,#IFLAG
  STRB r2,[r0,#:INDEX:R6502_PS]
  MOV r1,#BUS_BASEFLAG
  SUB r1,r1,#2:SHL:16
  STR r1,[r0,#:INDEX:R6502_ADDRESS_CODE]
  R6502_JUMP_TO_READ_OP

;Data Area

;  AREA    |C$$data|, DATA


  END
