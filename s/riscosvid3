;>riscosvid3.s
;
; BeebIt - BBC Micro Model B Emulator
;
; Enhanced host screen mode compatibility and teletext rounding
;
; (C) Copyright Crispian Daniels, 2024
;
; Email: <convertedgames@3insdale.me.uk>
;
; Use the GET directive to include register definitions as if typed here

  GET     h.RegNames

; Use the GET directive to include a list of SWI names as if typed here

  GET     h.SWInames

; Area name C$$code advisable as wanted to link with C output

  AREA    |C$$code|, CODE, READONLY

; Import global symbols
  IMPORT |host_scaledlinelength|
  IMPORT |nhostscreenlinelength|
  IMPORT |local_linelengthfloor|
  IMPORT |videoscale_workspace|

  EXPORT |video4copyscale|
  EXPORT |video6lutscale|
  EXPORT |video8lutsixdotscale|
  EXPORT |video8lutscale|
  EXPORT |video10lutscale|
  EXPORT |video12lutscale|
  EXPORT |video16lutsixdotscale|
  EXPORT |video16lutscale|
  EXPORT |video20lutscale|
  EXPORT |video24lutscale|
  EXPORT |video32lutsixdotscale|
  EXPORT |video32lutscale|
  EXPORT |video40lutscale|
  EXPORT |video48lutscale|
  EXPORT |video64lutsixdotscale|
  EXPORT |video64lutscale|
  EXPORT |roundteletextalpha|

;
;RISC OS
;

|video4copyscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first 4-bpp line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r6,lr}
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video4copyscale_1
  LDR r6,[r0],#4
  MOV r5,r1
  ADD r1,r1,#4
video4copyscale_2
  CMP r2,r5
  STR r6,[r5],r4
  BNE video4copyscale_2
  CMP r0,r3
  ADD r2,r2,#4
  BNE video4copyscale_1
  LDMFD sp!,{r4-r6,pc}

|video6lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r10,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video6lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #2
  MOV r8,r5,LSR #6
  AND r7,r7,#0x03FC
  AND r8,r8,#0x03FC
  LDR r7,[r6,r7]
  LDR r8,[r6,r8]
  ORR r7,r7,r8,LSL #12
  MOV r8,r5,LSR #14
  MOV r5,r5,LSR #22
  AND r8,r8,#0x03FC
  AND r5,r5,#0x03FC
  LDR r8,[r6,r8]
  LDR r5,[r6,r5]
  ORR r7,r7,r8,LSL #24
  MOV r8,r8,LSR #8
  ORR r8,r8,r5,LSL #4
  LDR r5,[r0],#4
  MOV r9,r5,LSL #2
  MOV r10,r5,LSR #6
  AND r9,r9,#0x03FC
  AND r10,r10,#0x03FC
  LDR r9,[r6,r9]
  LDR r10,[r6,r10]
  ORR r8,r8,r9,LSL #16
  ORR r8,r8,r10,LSL #28
  MOV r9,r10,LSR #4
  MOV r10,r5,LSR #14
  MOV r5,r5,LSR #22
  AND r10,r10,#0x03FC
  AND r5,r5,#0x03FC
  LDR r10,[r6,r10]
  LDR r5,[r6,r5]
  ORR r9,r9,r10,LSL #8
  ORR r9,r9,r5,LSL #20
  MOV r5,r1
  ADD r1,r1,#12
video6lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r9}
  ADD r5,r5,r4
  BNE video6lutscale_2
  CMP r0,r3
  ADD r2,r2,#12
  BNE video6lutscale_1
  LDMFD sp!,{r4-r10,pc}

|video8lutsixdotscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r10,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  ADD r6,r6,#0x400
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video8lutsixdotscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSR #6
  MOV r9,r5,LSR #14
  MOV r8,r5,LSR #22
  AND r7,r7,#0x03FC
  AND r9,r9,#0x03FC
  AND r8,r8,#0x03FC
  LDR r7,[r6,r7]
  LDR r9,[r6,r9]
  LDR r8,[r6,r8]
  ORR r7,r7,r9,LSL #16
  LDR r5,[r0],#4
  MOV r10,r5,LSL #2
  MOV r9,r5,LSR #6
  MOV r5,r5,LSR #14
  AND r10,r10,#0x03FC
  AND r9,r9,#0x03FC
  AND r5,r5,#0x03FC
  LDR r10,[r6,r10]
  LDR r9,[r6,r9]
  LDR r5,[r6,r5]
  ORR r8,r8,r10,LSL #16
  ORR r9,r9,r5,LSL #16
  MOV r5,r1
  ADD r1,r1,#12
video8lutsixdotscale_2
  CMP r2,r5
  STMIA r5,{r7-r9}
  ADD r5,r5,r4
  BNE video8lutsixdotscale_2
  CMP r0,r3
  ADD r2,r2,#12
  BNE video8lutsixdotscale_1
  LDMFD sp!,{r4-r10,pc}

|video8lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r8,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video8lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #2
  MOV r8,r5,LSR #6
  AND r7,r7,#0x03FC
  AND r8,r8,#0x03FC
  LDR r7,[r6,r7]
  LDR r8,[r6,r8]
  ORR r7,r7,r8,LSL #16
  MOV r8,r5,LSR #14
  MOV r5,r5,LSR #22
  AND r8,r8,#0x03FC
  AND r5,r5,#0x03FC
  LDR r8,[r6,r8]
  LDR r5,[r6,r5]
  ORR r8,r8,r5,LSL #16
  MOV r5,r1
  ADD r1,r1,#8
video8lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r8}
  ADD r5,r5,r4
  BNE video8lutscale_2
  CMP r0,r3
  ADD r2,r2,#8
  BNE video8lutscale_1
  LDMFD sp!,{r4-r8,pc}

|video10lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r11,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video10lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #2
  MOV r8,r5,LSR #6
  AND r7,r7,#0x03FC
  AND r8,r8,#0x03FC
  LDR r7,[r6,r7]
  LDR r8,[r6,r8]
  ORR r7,r7,r8,LSL #20
  MOV r8,r8,LSR #12
  MOV r9,r5,LSR #14
  MOV r5,r5,LSR #22
  AND r9,r9,#0x03FC
  AND r5,r5,#0x03FC
  LDR r9,[r6,r9]
  LDR r5,[r6,r5]
  ORR r8,r8,r9,LSL #8
  ORR r8,r8,r5,LSL #28
  MOV r9,r5,LSR #4
  LDR r5,[r0],#4
  MOV r10,r5,LSL #2
  MOV r11,r5,LSR #6
  AND r10,r10,#0x03FC
  AND r11,r11,#0x03FC
  LDR r10,[r6,r10]
  LDR r11,[r6,r11]
  ORR r9,r9,r10,LSL #16
  MOV r10,r9,LSR #16
  ORR r10,r10,r11,LSL #4
  MOV r11,r5,LSR #14
  MOV r5,r5,LSR #22
  AND r11,r11,#0x03FC
  AND r5,r5,#0x03FC
  LDR r11,[r6,r11]
  LDR r5,[r6,r5]
  ORR r10,r10,r11,LSL #24
  MOV r11,r11,LSR #8
  ORR r11,r11,r5,LSL #12
  MOV r5,r1
  ADD r1,r1,#20
video10lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r11}
  ADD r5,r5,r4
  BNE video10lutscale_2
  CMP r0,r3
  ADD r2,r2,#20
  BNE video10lutscale_1
  LDMFD sp!,{r4-r11,pc}

|video12lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r9,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video12lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #2
  MOV r8,r5,LSR #6
  AND r7,r7,#0x03FC
  AND r8,r8,#0x03FC
  LDR r7,[r6,r7]
  LDR r8,[r6,r8]
  ORR r7,r7,r8,LSL #24
  MOV r8,r8,LSR #8
  MOV r9,r5,LSR #14
  MOV r5,r5,LSR #22
  AND r9,r9,#0x03FC
  AND r5,r5,#0x03FC
  LDR r9,[r6,r9]
  LDR r5,[r6,r5]
  ORR r8,r8,r9,LSL #16
  MOV r9,r9,LSR #16
  ORR r9,r9,r5,LSL #8
  MOV r5,r1
  ADD r1,r1,#12
video12lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r9}
  ADD r5,r5,r4
  BNE video12lutscale_2
  CMP r0,r3
  ADD r2,r2,#12
  BNE video12lutscale_1
  LDMFD sp!,{r4-r9,pc}

|video16lutsixdotscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  ADD r6,r6,#0x400
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video16lutsixdotscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSR #6
  MOV r8,r5,LSR #14
  MOV r9,r5,LSR #22
  AND r7,r7,#0x03FC
  AND r8,r8,#0x03FC
  AND r9,r9,#0x03FC
  LDR r7,[r6,r7]
  LDR r8,[r6,r8]
  LDR r9,[r6,r9]
  CMP r0,r3
  BEQ video16lutsixdotscale_3
  LDR r5,[r0],#4
  MOV r10,r5,LSL #2
  MOV r11,r5,LSR #6
  MOV r12,r5,LSR #14
  AND r10,r10,#0x03FC
  AND r11,r11,#0x03FC
  AND r12,r12,#0x03FC
  LDR r10,[r6,r10]
  LDR r11,[r6,r11]
  LDR r12,[r6,r12]  
  MOV r5,r1
  ADD r1,r1,#24
video16lutsixdotscale_2
  CMP r2,r5
  STMIA r5,{r7-r12}
  ADD r5,r5,r4
  BNE video16lutsixdotscale_2
  CMP r0,r3
  ADD r2,r2,#24
  BNE video16lutsixdotscale_1
  LDMFD sp!,{r4-r12,pc}
video16lutsixdotscale_3
  CMP r2,r1
  STMIA r1,{r7-r9}
  ADD r1,r1,r4
  BNE video16lutsixdotscale_3
  LDMFD sp!,{r4-r12,pc}

|video16lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r10,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video16lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #2
  MOV r8,r5,LSR #6
  AND r7,r7,#0x03FC
  AND r8,r8,#0x03FC
  LDR r7,[r6,r7]
  LDR r8,[r6,r8]
  MOV r9,r5,LSR #14
  MOV r10,r5,LSR #22
  AND r9,r9,#0x03FC
  AND r10,r10,#0x03FC
  LDR r9,[r6,r9]
  LDR r10,[r6,r10]
  MOV r5,r1
  ADD r1,r1,#16
video16lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r10}
  ADD r5,r5,r4
  BNE video16lutscale_2
  CMP r0,r3
  ADD r2,r2,#16
  BNE video16lutscale_1
  LDMFD sp!,{r4-r10,pc}

|video20lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r11,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video20lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #4
  MOV r9,r5,LSR #4
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r7-r8}
  LDMIA r9,{r9-r10}
  ORR r8,r8,r9,LSL #8
  MOV r9,r9,LSR #24
  ORR r9,r9,r10,LSL #8
  MOV r10,r5,LSR #12
  MOV r5,r5,LSR #20
  AND r10,r10,#0x0FF0
  AND r5,r5,#0x0FF0
  ADD r10,r10,r6
  ADD r5,r5,r6
  LDMIA r10,{r10-r11}
  ORR r9,r9,r10,LSL #16
  MOV r10,r10,LSR #16
  ORR r10,r10,r11,LSL #16
  LDMIA r5,{r5,r11}
  ORR r10,r10,r5,LSL #24
  MOV r11,r11,LSL #24
  ORR r11,r11,r5,LSR #8
  MOV r5,r1
  ADD r1,r1,#20
video20lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r11}
  ADD r5,r5,r4
  BNE video20lutscale_2
  CMP r0,r3
  ADD r2,r2,#20
  BNE video20lutscale_1
  LDMFD sp!,{r4-r11,pc}

|video24lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video24lutscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSL #4
  MOV r9,r5,LSR #4
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r7-r8}
  LDMIA r9,{r9-r10}
  ORR r8,r8,r9,LSL #16
  MOV r9,r9,LSR #16
  ORR r9,r9,r10,LSL #16
  MOV r10,r5,LSR #12
  MOV r5,r5,LSR #20
  AND r10,r10,#0x0FF0
  AND r5,r5,#0x0FF0
  ADD r10,r10,r6
  ADD r5,r5,r6
  LDMIA r10,{r10-r11}
  LDMIA r5,{r5,r12}
  ORR r11,r11,r5,LSL #16
  MOV r12,r12,LSL #16
  ORR r12,r12,r5,LSR #16
  MOV r5,r1
  ADD r1,r1,#24
video24lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r12}
  ADD r5,r5,r4
  BNE video24lutscale_2
  CMP r0,r3
  ADD r2,r2,#24
  BNE video24lutscale_1
  LDMFD sp!,{r4-r12,pc}

|video32lutsixdotscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  ADD r6,r6,#0x1000
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video32lutsixdotscale_1
  LDR r5,[r0],#4
  MOV r7,r5,LSR #4
  MOV r9,r5,LSR #12
  MOV r11,r5,LSR #20
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  AND r11,r11,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  ADD r11,r11,r6
  LDMIA r7,{r7-r8}
  LDMIA r9,{r9-r10}
  LDMIA r11,{r11-r12}
  MOV r5,r1
  ADD r1,r1,#24
video32lutsixdotscale_2
  CMP r2,r5
  STMIA r5,{r7-r12}
  ADD r5,r5,r4
  BNE video32lutsixdotscale_2
  CMP r0,r3
  BEQ video32lutsixdotscale_4
  LDR r5,[r0],#4
  MOV r7,r5,LSL #4
  MOV r9,r5,LSR #4
  MOV r11,r5,LSR #12
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  AND r11,r11,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  ADD r11,r11,r6
  LDMIA r7,{r7-r8}
  LDMIA r9,{r9-r10}
  LDMIA r11,{r11-r12}
  MOV r5,r1
  ADD r1,r1,#24
  ADD r2,r2,#24
video32lutsixdotscale_3
  CMP r2,r5
  STMIA r5,{r7-r12}
  ADD r5,r5,r4
  BNE video32lutsixdotscale_3
  CMP r0,r3
  ADD r2,r2,#24
  BNE video32lutsixdotscale_1
video32lutsixdotscale_4
  LDMFD sp!,{r4-r12,pc}

|video32lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r0-r1,r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video32lutscale_1
  LDR r5,[r0]
  MOV r7,r5,LSL #4
  MOV r9,r5,LSR #4
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r0-r1}
  LDMIA r9,{r7-r8}
  MOV r9,r5,LSR #12
  MOV r11,r5,LSR #20
  AND r9,r9,#0x0FF0
  AND r11,r11,#0x0FF0
  ADD r9,r9,r6
  ADD r11,r11,r6
  LDMIA r9,{r9-r10}
  LDMIA r11,{r11-r12}
  LDR r5,[sp,#4]
video32lutscale_2
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r12}
  ADD r5,r5,r4
  BNE video32lutscale_2
  LDMFD sp,{r0-r1}
  ADD r2,r2,#32
  ADD r0,r0,#4
  ADD r1,r1,#32
  CMP r0,r3
  STMEA sp,{r0-r1}
  BNE video32lutscale_1
  LDMFD sp!,{r0-r1,r4-r12,pc}

|video40lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video40lutscale_1
  LDR r5,[r0]
  MOV r7,r5,LSL #4
  MOV r5,r5,LSR #4
  AND r7,r7,#0x0FF0
  AND r5,r5,#0x0FF0
  ADD r7,r7,r6
  ADD r5,r5,r6
  LDMIA r7,{r7-r9}
  LDMIA r5,{r5,r10-r11}
  MOV r11,r11,LSL #16
  ORR r11,r11,r10,LSR #16
  ORR r9,r9,r5,LSL #16
  MOV r10,r10,LSL #16
  ORR r10,r10,r5,LSR #16
  MOV r5,r1
video40lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r11}
  ADD r5,r5,r4
  BNE video40lutscale_2
  LDR r5,[r0],#4
  MOV r7,r5,LSR #12
  MOV r5,r5,LSR #20
  AND r7,r7,#0x0FF0
  AND r5,r5,#0x0FF0
  ADD r7,r7,r6
  ADD r5,r5,r6
  LDMIA r7,{r7-r9}
  LDMIA r5,{r5,r10-r11}
  MOV r11,r11,LSL #16
  ORR r11,r11,r10,LSR #16
  ORR r9,r9,r5,LSL #16
  MOV r10,r10,LSL #16
  ORR r10,r10,r5,LSR #16
  ADD r5,r1,#20
  ADD r2,r2,#20
  ADD r1,r1,#40
video40lutscale_3
  CMP r2,r5
  STMIA r5,{r7-r11}
  ADD r5,r5,r4
  BNE video40lutscale_3
  CMP r0,r3
  ADD r2,r2,#20
  BNE video40lutscale_1
  LDMFD sp!,{r4-r12,pc}

|video48lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video48lutscale_1
  LDR r5,[r0]
  MOV r7,r5,LSL #4
  MOV r10,r5,LSR #4
  AND r7,r7,#0x0FF0
  AND r10,r10,#0x0FF0
  ADD r7,r7,r6
  ADD r10,r10,r6
  LDMIA r7,{r7-r9}
  LDMIA r10,{r10-r12}
  MOV r5,r1
video48lutscale_2
  CMP r2,r5
  STMIA r5,{r7-r12}
  ADD r5,r5,r4
  BNE video48lutscale_2
  LDR r5,[r0],#4
  MOV r7,r5,LSR #12
  MOV r10,r5,LSR #20
  AND r7,r7,#0x0FF0
  AND r10,r10,#0x0FF0
  ADD r7,r7,r6
  ADD r10,r10,r6
  LDMIA r7,{r7-r9}
  LDMIA r10,{r10-r12}
  ADD r5,r1,#24
  ADD r2,r2,#24
  ADD r1,r1,#48
video48lutscale_3
  CMP r2,r5
  STMIA r5,{r7-r12}
  ADD r5,r5,r4
  BNE video48lutscale_3
  CMP r0,r3
  ADD r2,r2,#24
  BNE video48lutscale_1
  LDMFD sp!,{r4-r12,pc}

|video64lutsixdotscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r0-r1,r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  ADD r6,r6,#0x1000
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video64lutsixdotscale_1
  LDR r5,[r0]
  MOV r7,r5,LSR #4
  MOV r9,r5,LSR #12
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r0-r1,r7-r8}
  LDMIA r9,{r9-r12}
  LDR r5,[sp,#4]
video64lutsixdotscale_2
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r12}
  ADD r5,r5,r4
  BNE video64lutsixdotscale_2
  LDR r0,[sp]
  ADD r2,r2,#32
  ADD r5,r0,#4
  CMP r5,r3
  BEQ video64lutsixdotscale_5
  LDR r5,[r0]
  MOV r7,r5,LSR #20
  LDR r5,[r0,#4]
  MOV r9,r5,LSL #4
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r0-r1,r7-r8}
  LDMIA r9,{r9-r12}
  LDR r5,[sp,#4]
  ADD r5,r5,#32
video64lutsixdotscale_3
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r12}
  ADD r5,r5,r4
  BNE video64lutsixdotscale_3
  LDR r0,[sp]
  ADD r2,r2,#32
  LDR r5,[r0,#4]
  MOV r7,r5,LSR #4
  MOV r9,r5,LSR #12
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r0-r1,r7-r8}
  LDMIA r9,{r9-r12}
  LDR r5,[sp,#4]
  ADD r5,r5,#64
video64lutsixdotscale_4
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r12}
  ADD r5,r5,r4
  BNE video64lutsixdotscale_4
  LDMFD sp,{r0-r1}
  ADD r2,r2,#32
  ADD r0,r0,#8
  ADD r1,r1,#96
  CMP r0,r3
  STMEA sp,{r0-r1}
  BNE video64lutsixdotscale_1
  LDMFD sp!,{r0-r1,r4-r12,pc}
video64lutsixdotscale_5
  LDR r5,[r0]
  MOV r7,r5,LSR #20
  AND r7,r7,#0x0FF0
  ADD r7,r7,r6
  LDMIA r7,{r0-r1,r7-r8}
  LDR r5,[sp,#4]
  ADD r5,r5,#32
video64lutsixdotscale_6
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r8}
  ADD r5,r5,r4
  BNE video64lutsixdotscale_6
  LDMFD sp!,{r0-r1,r4-r12,pc}

|video64lutscale|
  ;r0 = address of 4-bpp line to read
  ;r1 = address of first scaled line to write
  LDR r2,=local_linelengthfloor
  LDR r3,[r2]
  CMP r3,#0
  MOVEQ pc,lr
  STMFD sp!,{r0-r1,r4-r12,lr}
  LDR r2,=videoscale_workspace
  LDR r6,[r2]
  LDR r2,=nhostscreenlinelength
  LDR r4,[r2]
  LDR r2,=host_scaledlinelength
  LDR r5,[r2]
  ADD r2,r5,r1
  SUB r2,r2,r4 ;r2 = address of last line to write
  ADD r3,r3,r0 ;r3 = address of end of line to read
video64lutscale_1
  LDR r5,[r0]
  MOV r7,r5,LSL #4
  MOV r9,r5,LSR #4
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r0-r1,r7-r8}
  LDMIA r9,{r9-r12}
  LDR r5,[sp,#4]
video64lutscale_2
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r12}
  ADD r5,r5,r4
  BNE video64lutscale_2
  LDR r0,[sp]
  ADD r2,r2,#32
  LDR r5,[r0]
  MOV r7,r5,LSR #12
  MOV r9,r5,LSR #20
  AND r7,r7,#0x0FF0
  AND r9,r9,#0x0FF0
  ADD r7,r7,r6
  ADD r9,r9,r6
  LDMIA r7,{r0-r1,r7-r8}
  LDMIA r9,{r9-r12}
  LDR r5,[sp,#4]
  ADD r5,r5,#32
video64lutscale_3
  CMP r2,r5
  STMIA r5,{r0-r1,r7-r12}
  ADD r5,r5,r4
  BNE video64lutscale_3
  LDMFD sp,{r0-r1}
  ADD r2,r2,#32
  ADD r0,r0,#4
  ADD r1,r1,#64
  CMP r0,r3
  STMEA sp,{r0-r1}
  BNE video64lutscale_1
  LDMFD sp!,{r0-r1,r4-r12,pc}

|roundteletextalpha|
  ;r0=address of character data to read
  ;r1=address of upper half-line character data to write
  ;r2=address of lower half-line character data to write
  STMFD sp!,{r4-r12,lr}
  MOV r3,#10
  LDMIA r0,{r4-r5}
  LDMIA r0!,{r6-r7}
  LDR r12,=0x0F0F0F0F
roundteletextalpha1
  MOV r8,r4,LSL #8
  MOV r9,r6,LSL #8
  AND r10,r4,r9
  BIC r10,r10,r8
  AND r10,r10,r12
  MOV r8,r4,LSR #8
  MOV r9,r6,LSR #8
  ORR r8,r8,r5,LSL #24
  ORR r9,r9,r7,LSL #24
  AND r11,r4,r9
  BIC r11,r11,r8
  AND r11,r11,r12,LSL #4
  ORR r10,r10,r11
  ORR r10,r10,r6
  STR r10,[r1],#4
  MOV r8,r5,LSL #8
  MOV r9,r7,LSL #8
  ORR r8,r8,r4,LSR #24
  ORR r9,r9,r6,LSR #24
  AND r10,r5,r9
  BIC r10,r10,r8
  AND r10,r10,r12
  MOV r8,r5,LSR #8
  MOV r9,r7,LSR #8
  AND r11,r5,r9
  BIC r11,r11,r8
  AND r11,r11,r12,LSL #4
  ORR r10,r10,r11
  ORR r10,r10,r7
  STR r10,[r1],#4
  SUBS r3,r3,#1
  BEQ roundteletextalpha2
  MOV r4,r6
  MOV r5,r7
  LDMIA r0!,{r6-r7}
  MOV r8,r4,LSL #8
  MOV r9,r6,LSL #8
  AND r10,r6,r8
  BIC r10,r10,r9
  AND r10,r10,r12
  MOV r8,r4,LSR #8
  MOV r9,r6,LSR #8
  ORR r8,r8,r5,LSL #24
  ORR r9,r9,r7,LSL #24
  AND r11,r6,r8
  BIC r11,r11,r9
  AND r11,r11,r12,LSL #4
  ORR r10,r10,r11
  ORR r10,r10,r4
  STR r10,[r2],#4
  MOV r8,r5,LSL #8
  MOV r9,r7,LSL #8
  ORR r8,r8,r4,LSR #24
  ORR r9,r9,r6,LSR #24
  AND r10,r7,r8
  BIC r10,r10,r9
  AND r10,r10,r12
  MOV r8,r5,LSR #8
  MOV r9,r7,LSR #8
  AND r11,r7,r8
  BIC r11,r11,r9
  AND r11,r11,r12,LSL #4
  ORR r10,r10,r11
  ORR r10,r10,r5
  STR r10,[r2],#4
  B roundteletextalpha1
roundteletextalpha2
  STMIA r2!,{r6-r7}
  LDMFD sp!,{r4-r12,pc}

;Data Area

  AREA    |C$$data|, DATA

  END
