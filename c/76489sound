/*sound.c
 *
 * Sound System
 *
 * BeebIt - BBC Micro Model B Emulator
 *
 * (C) Copyright Michael J Foot, 1998-1999
 *
 * Email: <mikef@voyager.co.nz>
 */

#include "beebit.h"
#include "kernel.h"
#include "riscos.h"
#include "76489sound.h"
#include "swis.h"

extern _kernel_swi_regs regs;

/*76489 sound generator*/
int a76489_timer; /*sound timer*/
int a76489_frequency[4]; /*sound frequency*/
int a76489_volume[4]; /*sound volume*/
int a76489_lastregister; /*last register updated*/

int a76489_noisefb;
/*int a76489_lookup[0x400];*/
int a76489_lookup[0x400] =
{
0x0000,0xBEE7,0xAEE7,0xA58B,0x9EE7,0x99C1,0x958B,0x91FC,
0x8EE7,0x8C2F,0x89C1,0x878D,0x858B,0x83B2,0x81FC,0x8065,
0x7EE7,0x7D81,0x7C2F,0x7AF0,0x79C1,0x78A0,0x778D,0x7687,
0x758B,0x749A,0x73B2,0x72D3,0x71FC,0x712D,0x7065,0x6FA3,
0x6EE7,0x6E31,0x6D81,0x6CD6,0x6C2F,0x6B8D,0x6AF0,0x6A56,
0x69C1,0x692F,0x68A0,0x6815,0x678D,0x6709,0x6687,0x6608,
0x658B,0x6511,0x649A,0x6425,0x63B2,0x6342,0x62D3,0x6267,
0x61FC,0x6194,0x612D,0x60C8,0x6065,0x6003,0x5FA3,0x5F44,
0x5EE7,0x5E8C,0x5E31,0x5DD9,0x5D81,0x5D2B,0x5CD6,0x5C82,
0x5C2F,0x5BDE,0x5B8D,0x5B3E,0x5AF0,0x5AA2,0x5A56,0x5A0B,
0x59C1,0x5977,0x592F,0x58E7,0x58A0,0x585A,0x5815,0x57D1,
0x578D,0x574B,0x5709,0x56C7,0x5687,0x5647,0x5608,0x55C9,
0x558B,0x554E,0x5511,0x54D5,0x549A,0x545F,0x5425,0x53EB,
0x53B2,0x537A,0x5342,0x530A,0x52D3,0x529D,0x5267,0x5231,
0x51FC,0x51C8,0x5194,0x5160,0x512D,0x50FA,0x50C8,0x5096,
0x5065,0x5034,0x5003,0x4FD3,0x4FA3,0x4F73,0x4F44,0x4F16,
0x4EE7,0x4EB9,0x4E8C,0x4E5E,0x4E31,0x4E05,0x4DD9,0x4DAD,
0x4D81,0x4D56,0x4D2B,0x4D00,0x4CD6,0x4CAC,0x4C82,0x4C58,
0x4C2F,0x4C06,0x4BDE,0x4BB5,0x4B8D,0x4B65,0x4B3E,0x4B17,
0x4AF0,0x4AC9,0x4AA2,0x4A7C,0x4A56,0x4A30,0x4A0B,0x49E6,
0x49C1,0x499C,0x4977,0x4953,0x492F,0x490B,0x48E7,0x48C4,
0x48A0,0x487D,0x485A,0x4838,0x4815,0x47F3,0x47D1,0x47AF,
0x478D,0x476C,0x474B,0x4729,0x4709,0x46E8,0x46C7,0x46A7,
0x4687,0x4667,0x4647,0x4627,0x4608,0x45E8,0x45C9,0x45AA,
0x458B,0x456D,0x454E,0x4530,0x4511,0x44F3,0x44D5,0x44B8,
0x449A,0x447C,0x445F,0x4442,0x4425,0x4408,0x43EB,0x43CF,
0x43B2,0x4396,0x437A,0x435E,0x4342,0x4326,0x430A,0x42EF,
0x42D3,0x42B8,0x429D,0x4282,0x4267,0x424C,0x4231,0x4217,
0x41FC,0x41E2,0x41C8,0x41AE,0x4194,0x417A,0x4160,0x4146,
0x412D,0x4113,0x40FA,0x40E1,0x40C8,0x40AF,0x4096,0x407D,
0x4065,0x404C,0x4034,0x401B,0x4003,0x3FEB,0x3FD3,0x3FBB,
0x3FA3,0x3F8B,0x3F73,0x3F5C,0x3F44,0x3F2D,0x3F16,0x3EFE,
0x3EE7,0x3ED0,0x3EB9,0x3EA2,0x3E8C,0x3E75,0x3E5E,0x3E48,
0x3E31,0x3E1B,0x3E05,0x3DEF,0x3DD9,0x3DC2,0x3DAD,0x3D97,
0x3D81,0x3D6B,0x3D56,0x3D40,0x3D2B,0x3D15,0x3D00,0x3CEB,
0x3CD6,0x3CC1,0x3CAC,0x3C97,0x3C82,0x3C6D,0x3C58,0x3C44,
0x3C2F,0x3C1B,0x3C06,0x3BF2,0x3BDE,0x3BC9,0x3BB5,0x3BA1,
0x3B8D,0x3B79,0x3B65,0x3B52,0x3B3E,0x3B2A,0x3B17,0x3B03,
0x3AF0,0x3ADC,0x3AC9,0x3AB6,0x3AA2,0x3A8F,0x3A7C,0x3A69,
0x3A56,0x3A43,0x3A30,0x3A1E,0x3A0B,0x39F8,0x39E6,0x39D3,
0x39C1,0x39AE,0x399C,0x3989,0x3977,0x3965,0x3953,0x3941,
0x392F,0x391D,0x390B,0x38F9,0x38E7,0x38D5,0x38C4,0x38B2,
0x38A0,0x388F,0x387D,0x386C,0x385A,0x3849,0x3838,0x3826,
0x3815,0x3804,0x37F3,0x37E2,0x37D1,0x37C0,0x37AF,0x379E,
0x378D,0x377D,0x376C,0x375B,0x374B,0x373A,0x3729,0x3719,
0x3709,0x36F8,0x36E8,0x36D8,0x36C7,0x36B7,0x36A7,0x3697,
0x3687,0x3677,0x3667,0x3657,0x3647,0x3637,0x3627,0x3617,
0x3608,0x35F8,0x35E8,0x35D9,0x35C9,0x35BA,0x35AA,0x359B,
0x358B,0x357C,0x356D,0x355D,0x354E,0x353F,0x3530,0x3520,
0x3511,0x3502,0x34F3,0x34E4,0x34D5,0x34C6,0x34B8,0x34A9,
0x349A,0x348B,0x347C,0x346E,0x345F,0x3451,0x3442,0x3433,
0x3425,0x3416,0x3408,0x33FA,0x33EB,0x33DD,0x33CF,0x33C0,
0x33B2,0x33A4,0x3396,0x3388,0x337A,0x336C,0x335E,0x3350,
0x3342,0x3334,0x3326,0x3318,0x330A,0x32FC,0x32EF,0x32E1,
0x32D3,0x32C6,0x32B8,0x32AA,0x329D,0x328F,0x3282,0x3274,
0x3267,0x3259,0x324C,0x323F,0x3231,0x3224,0x3217,0x3209,
0x31FC,0x31EF,0x31E2,0x31D5,0x31C8,0x31BB,0x31AE,0x31A1,
0x3194,0x3187,0x317A,0x316D,0x3160,0x3153,0x3146,0x313A,
0x312D,0x3120,0x3113,0x3107,0x30FA,0x30EE,0x30E1,0x30D4,
0x30C8,0x30BB,0x30AF,0x30A2,0x3096,0x308A,0x307D,0x3071,
0x3065,0x3058,0x304C,0x3040,0x3034,0x3027,0x301B,0x300F,
0x3003,0x2FF7,0x2FEB,0x2FDF,0x2FD3,0x2FC7,0x2FBB,0x2FAF,
0x2FA3,0x2F97,0x2F8B,0x2F7F,0x2F73,0x2F68,0x2F5C,0x2F50,
0x2F44,0x2F39,0x2F2D,0x2F21,0x2F16,0x2F0A,0x2EFE,0x2EF3,
0x2EE7,0x2EDC,0x2ED0,0x2EC5,0x2EB9,0x2EAE,0x2EA2,0x2E97,
0x2E8C,0x2E80,0x2E75,0x2E6A,0x2E5E,0x2E53,0x2E48,0x2E3D,
0x2E31,0x2E26,0x2E1B,0x2E10,0x2E05,0x2DFA,0x2DEF,0x2DE4,
0x2DD9,0x2DCD,0x2DC2,0x2DB8,0x2DAD,0x2DA2,0x2D97,0x2D8C,
0x2D81,0x2D76,0x2D6B,0x2D60,0x2D56,0x2D4B,0x2D40,0x2D35,
0x2D2B,0x2D20,0x2D15,0x2D0B,0x2D00,0x2CF5,0x2CEB,0x2CE0,
0x2CD6,0x2CCB,0x2CC1,0x2CB6,0x2CAC,0x2CA1,0x2C97,0x2C8C,
0x2C82,0x2C77,0x2C6D,0x2C63,0x2C58,0x2C4E,0x2C44,0x2C39,
0x2C2F,0x2C25,0x2C1B,0x2C10,0x2C06,0x2BFC,0x2BF2,0x2BE8,
0x2BDE,0x2BD4,0x2BC9,0x2BBF,0x2BB5,0x2BAB,0x2BA1,0x2B97,
0x2B8D,0x2B83,0x2B79,0x2B6F,0x2B65,0x2B5C,0x2B52,0x2B48,
0x2B3E,0x2B34,0x2B2A,0x2B20,0x2B17,0x2B0D,0x2B03,0x2AF9,
0x2AF0,0x2AE6,0x2ADC,0x2AD3,0x2AC9,0x2ABF,0x2AB6,0x2AAC,
0x2AA2,0x2A99,0x2A8F,0x2A86,0x2A7C,0x2A73,0x2A69,0x2A60,
0x2A56,0x2A4D,0x2A43,0x2A3A,0x2A30,0x2A27,0x2A1E,0x2A14,
0x2A0B,0x2A02,0x29F8,0x29EF,0x29E6,0x29DC,0x29D3,0x29CA,
0x29C1,0x29B7,0x29AE,0x29A5,0x299C,0x2993,0x2989,0x2980,
0x2977,0x296E,0x2965,0x295C,0x2953,0x294A,0x2941,0x2938,
0x292F,0x2926,0x291D,0x2914,0x290B,0x2902,0x28F9,0x28F0,
0x28E7,0x28DE,0x28D5,0x28CC,0x28C4,0x28BB,0x28B2,0x28A9,
0x28A0,0x2897,0x288F,0x2886,0x287D,0x2874,0x286C,0x2863,
0x285A,0x2852,0x2849,0x2840,0x2838,0x282F,0x2826,0x281E,
0x2815,0x280D,0x2804,0x27FC,0x27F3,0x27EA,0x27E2,0x27D9,
0x27D1,0x27C8,0x27C0,0x27B7,0x27AF,0x27A7,0x279E,0x2796,
0x278D,0x2785,0x277D,0x2774,0x276C,0x2764,0x275B,0x2753,
0x274B,0x2742,0x273A,0x2732,0x2729,0x2721,0x2719,0x2711,
0x2709,0x2700,0x26F8,0x26F0,0x26E8,0x26E0,0x26D8,0x26CF,
0x26C7,0x26BF,0x26B7,0x26AF,0x26A7,0x269F,0x2697,0x268F,
0x2687,0x267F,0x2677,0x266F,0x2667,0x265F,0x2657,0x264F,
0x2647,0x263F,0x2637,0x262F,0x2627,0x261F,0x2617,0x260F,
0x2608,0x2600,0x25F8,0x25F0,0x25E8,0x25E0,0x25D9,0x25D1,
0x25C9,0x25C1,0x25BA,0x25B2,0x25AA,0x25A2,0x259B,0x2593,
0x258B,0x2584,0x257C,0x2574,0x256D,0x2565,0x255D,0x2556,
0x254E,0x2546,0x253F,0x2537,0x2530,0x2528,0x2520,0x2519,
0x2511,0x250A,0x2502,0x24FB,0x24F3,0x24EC,0x24E4,0x24DD,
0x24D5,0x24CE,0x24C6,0x24BF,0x24B8,0x24B0,0x24A9,0x24A1,
0x249A,0x2493,0x248B,0x2484,0x247C,0x2475,0x246E,0x2466,
0x245F,0x2458,0x2451,0x2449,0x2442,0x243B,0x2433,0x242C,
0x2425,0x241E,0x2416,0x240F,0x2408,0x2401,0x23FA,0x23F2,
0x23EB,0x23E4,0x23DD,0x23D6,0x23CF,0x23C8,0x23C0,0x23B9,
0x23B2,0x23AB,0x23A4,0x239D,0x2396,0x238F,0x2388,0x2381,
0x237A,0x2373,0x236C,0x2365,0x235E,0x2357,0x2350,0x2349,
0x2342,0x233B,0x2334,0x232D,0x2326,0x231F,0x2318,0x2311,
0x230A,0x2303,0x22FC,0x22F5,0x22EF,0x22E8,0x22E1,0x22DA,
0x22D3,0x22CC,0x22C6,0x22BF,0x22B8,0x22B1,0x22AA,0x22A4,
0x229D,0x2296,0x228F,0x2288,0x2282,0x227B,0x2274,0x226D,
0x2267,0x2260,0x2259,0x2253,0x224C,0x2245,0x223F,0x2238,
0x2231,0x222B,0x2224,0x221D,0x2217,0x2210,0x2209,0x2203,
0x21FC,0x21F6,0x21EF,0x21E9,0x21E2,0x21DB,0x21D5,0x21CE,
0x21C8,0x21C1,0x21BB,0x21B4,0x21AE,0x21A7,0x21A1,0x219A,
0x2194,0x218D,0x2187,0x2180,0x217A,0x2173,0x216D,0x2167,
0x2160,0x215A,0x2153,0x214D,0x2146,0x2140,0x213A,0x2133,
0x212D,0x2127,0x2120,0x211A,0x2113,0x210D,0x2107,0x2101,
0x20FA,0x20F4,0x20EE,0x20E7,0x20E1,0x20DB,0x20D4,0x20CE,
0x20C8,0x20C2,0x20BB,0x20B5,0x20AF,0x20A9,0x20A2,0x209C,
0x2096,0x2090,0x208A,0x2083,0x207D,0x2077,0x2071,0x206B,
0x2065,0x205E,0x2058,0x2052,0x204C,0x2046,0x2040,0x203A,
0x2034,0x202D,0x2027,0x2021,0x201B,0x2015,0x200F,0x2009,
0x2003,0x1FFD,0x1FF7,0x1FF1,0x1FEB,0x1FE5,0x1FDF,0x1FD9,
0x1FD3,0x1FCD,0x1FC7,0x1FC1,0x1FBB,0x1FB5,0x1FAF,0x1FA9,
0x1FA3,0x1F9D,0x1F97,0x1F91,0x1F8B,0x1F85,0x1F7F,0x1F79,
0x1F73,0x1F6D,0x1F68,0x1F62,0x1F5C,0x1F56,0x1F50,0x1F4A,
0x1F44,0x1F3E,0x1F39,0x1F33,0x1F2D,0x1F27,0x1F21,0x1F1B,
0x1F16,0x1F10,0x1F0A,0x1F04,0x1EFE,0x1EF9,0x1EF3,0x1EED
};

void soundreset(void)
{
  /*FILE *hfile;*/

  a76489_frequency[0] = 0;
  a76489_frequency[1] = 0; /*x3FF;*/
  a76489_frequency[2] = 0; /*x3FF;*/
  a76489_frequency[3] = 0; /*x3FF;*/

  a76489_volume[0] = 0;
  a76489_volume[1] = 15;
  a76489_volume[2] = 15;
  a76489_volume[3] = 15;

  a76489_noisefb = 0;
  a76489_lastregister = 0;

  /*hfile = fopen("<BeebIt$Dir>.SoundTable","rb");
  if (hfile != NULL)
  {
    fread(&a76489_lookup,1,0x1000,hfile);
    fclose(hfile);
  }*/

  /*for (i=0;i<0x400;i++)
  {
    n = (0xE80+16*(1-2)+83.33333*i);
    a76489_lookup[1][i] = (int)n;*/
    /*fprintf(htrace,"LU:&%X &%X &%X\n",i,a76489_lookup[1][i],(int)n);*/
    /*n = (0xE80+16*(2-2)+83.33333*i);
    a76489_lookup[2][i] = (int)n;
    n = (0xE80+16*(3-2)+83.33333*i);
    a76489_lookup[3][i] = (int)n;
    astore[i] = 0;
  }*/

  /*for (i=0;i<0x400;i-=8);
  a76489_frequency[0x3F0] = 0;
  a76489_frequency[0x3E2] = 1;
  a76489_frequency[0x3D4] = 2;
  a76489_frequency[0x3C6] = 4;
  a76489_frequency[0x3B7] = 5;

  a76489_frequency[0x0ED] = 100;*/
}

void soundwrite(char nvalue)
{
  int nsoundctrl, nsoundchannel;
  /*fprintf(htrace," SOUNDWRITE &%X\n",nvalue);*/
  if (nvalue & 0x80)
  {
    /*first byte*/
    /*fprintf(htrace,"REG=%u\n",(nvalue>>4) & 0x7);*/
    nsoundctrl = ((nvalue >> 4) & 0x07);
    nsoundchannel = (3 - (nsoundctrl >> 1));
    switch (nsoundctrl)
    {
      case 0:
        /*tone 3 frequency*/
        a76489_lastregister = 3;
        a76489_frequency[3] &= 0x3F0;
        a76489_frequency[3] |= (nvalue & 0x0F);
        /*fprintf(htrace,"FREQ(3)=&%X\n",a76489_frequency[3]);*/
        if (beebit_sound)
          soundplay(3);
        break;
      case 1:
        /*tone 3 volume*/
        a76489_lastregister = 3;
        a76489_volume[3] = ((nvalue & 0x0F) ^ 0x0F);
        /*fprintf(htrace,"VOL(3)=&%X\n",a76489_volume[3]);*/
        if (beebit_sound)
          soundplay(3);
        break;
      case 2:
        /*tone 2 frequency*/
        a76489_lastregister = 2;
        a76489_frequency[2] &= 0x3F0;
        a76489_frequency[2] |= (nvalue & 0x0F);
        /*fprintf(htrace,"FREQ(2)=&%X\n",a76489_frequency[2]);*/
        if (beebit_sound)
          soundplay(2);
        break;
      case 3:
        /*tone 2 volume*/
        a76489_lastregister = 2;
        a76489_volume[2] = ((nvalue & 0x0F) ^ 0x0F);
        /*fprintf(htrace,"VOL(2)=&%X\n",a76489_volume[2]);*/
        if (beebit_sound)
          soundplay(2);
        break;
      case 4:
        /*tone 1 frequency*/
        a76489_lastregister = 1;
        a76489_frequency[1] &= 0x3F0;
        a76489_frequency[1] |= (nvalue & 0x0F);
        /*fprintf(htrace,"FREQ(1)=&%X\n",a76489_frequency[1]);*/
        if (beebit_sound)
          soundplay(1);
        break;
      case 5:
        /*tone 1 volume*/
        a76489_lastregister = 1;
        a76489_volume[1] = ((nvalue & 0x0F) ^ 0x0F);
        /*fprintf(htrace,"VOL(1)=&%X\n",a76489_volume[1]);*/
        if (beebit_sound)
          soundplay(1);
        break;
      case 6:
        /*noise control*/
        a76489_lastregister = 0;
        a76489_frequency[0] = (nvalue & 3);
        /*FB (feedback control)*/
        a76489_noisefb = (nvalue & 4);
	/*fprintf(htrace,"NOISE=&%X &%X\n",a76489_frequency[0],a76489_noisefb);*/
        if (beebit_sound)
          soundplay(0);
        break;
      case 7:
        /*noise volume*/
        a76489_lastregister = 0;
        a76489_volume[0] = ((nvalue & 0x0F) ^ 0x0F);
	/*fprintf(htrace,"VOL(0)=&%X\n",a76489_volume[0]);*/
        if (beebit_sound)
          soundplay(0);
        break;
    }
  }
  else
  {
    /*second byte*/
    /*fprintf(htrace,"TOP=&%X\n",(nvalue & 0x3f)<<4);*/
    a76489_frequency[a76489_lastregister] &= 0x0F;
    a76489_frequency[a76489_lastregister] |= ((nvalue & 0x3F)<<4);
    /*fprintf(htrace,"FREQ(%u)!=&%X\n",a76489_lastregister,a76489_frequency[a76489_lastregister]);*/
    /*fprintf(htrace,">>(%u)=&%X\n",a76489_lastregister,a76489_lookup[a76489_frequency[a76489_lastregister]]);*/
    if (beebit_sound)
      soundplay(a76489_lastregister);
  }
}

void soundprocess(void)
{
  /*int i;
  #ifdef __DEBUG__
    for (i=0;i<4;i++)
    {
      fprintf(htrace,"CH:%i &%X",i,a76489_frequency[i]);
      if (a76489_volume[i] > 0)
        fprintf(htrace,",&%X!\n",a76489_volume[i]);
      else
        fprintf(htrace,"\n");
    }
  #endif*/
  if (beebit_sound)
  {
    soundplay(3);
    soundplay(2);
    soundplay(1);
    soundplay(0);
  }

  /*for (i=1;i<=3;i++)
  {
    soundplay(i);
  }*/
}

void soundplay(int nchannel)
{
  #ifdef __DEBUG__
    fprintf(htrace,"CH:%i &%X\n",nchannel,a76489_frequency[nchannel]);
  #endif
  if (nchannel == 0)
  {
    if (a76489_volume[0] == 0)
    {
      regs.r[0] = 1;
      regs.r[1] = 0;
      regs.r[2] = 0;
      regs.r[3] = 1;
      _kernel_swi(Sound_Control,&regs,&regs);
    }
    else
    {
      /*fprintf(htrace,"CH:0 &%X &%X &%X\n",a76489_frequency[0],a76489_volume[0],a76489_noisefb);*/
      regs.r[0] = 1;
      regs.r[1] = (-a76489_volume[0]);
      regs.r[2] = 0x8000+(a76489_frequency[0]+a76489_noisefb);
      regs.r[3] = 0xFF;
      _kernel_swi(Sound_Control,&regs,&regs);
    }
  }
  else
  {
    if (a76489_volume[nchannel] == 0)
    {
      /*fprintf(htrace,"XX:%u=&%X\n",nchannel,a76489_frequency[nchannel]);*/
      regs.r[0] = (nchannel+1);
      regs.r[1] = 0;
      regs.r[2] = a76489_lookup[a76489_frequency[nchannel]];
      regs.r[3] = 1;
      _kernel_swi(Sound_Control,&regs,&regs);
    }
    else
    {
      /*fprintf(htrace,"CH:%i &%X &%X",nchannel,a76489_frequency[nchannel],a76489_lookup[a76489_frequency[nchannel]]);
      if (a76489_volume[nchannel] > 0)
        fprintf(htrace,",&%X!\n",a76489_volume[nchannel]);
      else
        fprintf(htrace,"\n");*/
      /*fprintf(htrace,"CH:%i &%X\n",i,a76489_frequency[i]);*/
      /*inttohex(nchannel);
      bbcvdu(32);
      inttohex(a76489_frequency[nchannel]);
      bbcvdu(32);
      inttohex(a76489_lookup[a76489_frequency[nchannel]]);
      bbcvdu(13);
      bbcvdu(10);*/
      regs.r[0] = (nchannel+1);
      regs.r[1] = (-a76489_volume[nchannel]);
      /*regs.r[2] = (int)125000/a76489_frequency[i];*/
      regs.r[2] = a76489_lookup[a76489_frequency[nchannel]];
      /*fprintf(htrace,"XX:%u=&%X\n",nchannel,regs.r[2]);*/
      regs.r[3] = 0xFF;
      _kernel_swi(Sound_Control,&regs,&regs);
    }
  }
}
